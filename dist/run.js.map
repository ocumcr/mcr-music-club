{"version":3,"file":"run.js","sources":["../src/Model/Sound.ts","../src/Model/PlaylistManager.ts","../src/View/Content.ts","../src/Controller/Navigation.ts","../src/View/Footer.ts","../src/Model/LocalStorage.ts","../src/Model/Record.ts","../src/View/Header.ts","../src/Controller/ContentEvents.ts","../src/Controller/URLManager.ts","../src/Model/Survey.ts","../src/Controller/FooterEvents.ts","../src/Controller/EventHandlers.ts","../src/Controller/HeaderEvents.ts","../src/run.ts"],"sourcesContent":["export class Sound {\r\n    static #isReady = false\r\n\r\n    static audio: HTMLAudioElement | null = null\r\n\r\n    static #source: MediaElementAudioSourceNode\r\n    static #context: AudioContext\r\n    static #gain: GainNode\r\n\r\n    static load(src: string) {\r\n        if (!this.#context) {\r\n            this.#context = new AudioContext()\r\n            this.#gain = this.#context.createGain()\r\n            this.#gain.connect(this.#context.destination)\r\n        }\r\n\r\n        if (this.audio) {\r\n            this.audio.pause()\r\n            this.#source.disconnect()\r\n        }\r\n\r\n        this.audio = new Audio(src)\r\n        this.#source = this.#context.createMediaElementSource(this.audio)\r\n        this.#source.connect(this.#gain)\r\n\r\n        return new Promise<void>((resolve) => {\r\n            this.audio!.onloadedmetadata = (e) => {\r\n                this.#isReady = true\r\n\r\n                resolve()\r\n            }\r\n        })\r\n    }\r\n\r\n    static play() {\r\n        if (!this.isReady()) return\r\n        this.audio.play()\r\n    }\r\n\r\n    static pause() {\r\n        if (!this.isReady()) return\r\n        this.audio.pause()\r\n    }\r\n\r\n    static isPlaying(): boolean {\r\n        return this.isReady() && !this.audio.paused\r\n    }\r\n\r\n    static setLoop(loop: boolean) {\r\n        if (!this.isReady()) return\r\n        this.audio.loop = loop\r\n    }\r\n\r\n    static isReady(): this is typeof Sound & { audio: HTMLAudioElement } {\r\n        return this.#isReady\r\n    }\r\n\r\n    static setVolume(volume: number) {\r\n        if (volume < 0 || 1 < volume) {\r\n            console.error(\"volume must range from 0 to 1.\")\r\n            return\r\n        }\r\n\r\n        this.#gain.gain.value = volume\r\n    }\r\n\r\n    static getDuration(): number {\r\n        return this.isReady() ? this.audio.duration : 0\r\n    }\r\n\r\n    static set currentTime(second: number) {\r\n        if (!this.isReady()) return\r\n        this.audio.currentTime = second\r\n    }\r\n\r\n    static get currentTime(): number {\r\n        return this.isReady() ? this.audio.currentTime : 0\r\n    }\r\n}\r\n","// プレイリスト管理のクラス\r\nexport class PlaylistManager {\r\n    static playlist: Readonly<Track[]> = []\r\n    static defaultOrderPlaylist: Readonly<Track[]> = []\r\n\r\n    static currentTrackIndex: number = -1\r\n\r\n    static isAvailable() {\r\n        return this.currentTrackIndex !== -1\r\n    }\r\n\r\n    static setPlaylist(playlist: readonly Track[], shuffle: boolean) {\r\n        this.defaultOrderPlaylist = playlist\r\n        this.playlist = shuffle ? this.#shuffleArray([...playlist]) : playlist\r\n    }\r\n\r\n    static setDefaultOrder() {\r\n        if (this.isAvailable()) {\r\n            const currentTrack = this.playlist[this.currentTrackIndex]\r\n\r\n            this.currentTrackIndex = this.defaultOrderPlaylist.indexOf(currentTrack)\r\n        }\r\n\r\n        this.playlist = [...this.defaultOrderPlaylist]\r\n    }\r\n\r\n    static shufflePlaylist({ moveCurrentTrackToTop }: { moveCurrentTrackToTop: boolean }) {\r\n        if (this.isAvailable()) {\r\n            const currentTrack = this.playlist[this.currentTrackIndex]\r\n\r\n            // 今再生しているトラックを一番目に持ってくる\r\n            do {\r\n                this.playlist = this.#shuffleArray([...this.playlist])\r\n            } while (moveCurrentTrackToTop && this.playlist[0] != currentTrack)\r\n\r\n            if (moveCurrentTrackToTop) {\r\n                this.currentTrackIndex = 0\r\n            }\r\n        } else {\r\n            this.playlist = this.#shuffleArray([...this.playlist])\r\n        }\r\n    }\r\n\r\n    static getCurrentTrackTitle(): string | null {\r\n        if (!this.isAvailable()) return null\r\n        return this.playlist[this.currentTrackIndex].title\r\n    }\r\n\r\n    static getNextTrack() {\r\n        if (!this.isAvailable()) return { track: this.playlist[0], index: 0 }\r\n        const nextIndex = (this.currentTrackIndex + 1) % this.playlist.length\r\n        return { track: this.playlist[nextIndex], index: nextIndex }\r\n    }\r\n\r\n    static getPreviousTrack() {\r\n        if (!this.isAvailable()) return { track: this.playlist[0], index: 0 }\r\n        const prevIndex = (this.currentTrackIndex - 1 + this.playlist.length) % this.playlist.length\r\n        return { track: this.playlist[prevIndex], index: prevIndex }\r\n    }\r\n\r\n    static #shuffleArray(array: any[]) {\r\n        if (array.length == 1) return [...array]\r\n\r\n        return [...array].reduce((_, cur, idx, arr) => {\r\n            const rand = Math.floor(Math.random() * (idx + 1))\r\n            ;[arr[idx], arr[rand]] = [arr[rand], cur]\r\n            return arr\r\n        })\r\n    }\r\n}\r\n","export class Content {\r\n    static debugLog: HTMLElement\r\n    static content: HTMLElement\r\n    static #musics: HTMLOListElement\r\n\r\n    static init() {\r\n        this.debugLog = document.getElementById(\"debug-log\")!\r\n        this.content = document.querySelector(\".content\")!\r\n        this.#musics = document.getElementById(\"musics\") as HTMLOListElement\r\n    }\r\n\r\n    static addLog(text: string) {\r\n        console.log(text)\r\n        // document.getElementById(\"debug-log\").innerHTML += navigator.mediaSession.playbackState + \"<br />\"\r\n        this.debugLog.innerHTML += text + \"<br />\"\r\n    }\r\n\r\n    static fadeIn() {\r\n        this.content.classList.remove(\"fade-in\")\r\n        requestAnimationFrame(() => {\r\n            this.content.classList.add(\"fade-in\")\r\n        })\r\n    }\r\n\r\n    static scrollTo(index: number) {\r\n        if (index <= 0) {\r\n            window.scrollTo({\r\n                top: 0,\r\n                behavior: \"smooth\",\r\n            })\r\n        } else {\r\n            const track = document.querySelectorAll(\".track\")[index - 1]\r\n\r\n            track.scrollIntoView({\r\n                behavior: \"smooth\",\r\n            })\r\n        }\r\n    }\r\n\r\n    static renderPlaylist(playlist: readonly Track[]) {\r\n        this.#musics.innerHTML = playlist.map(this.#createTrackElement).join(\"\")\r\n    }\r\n\r\n    static #createTrackElement(track: Track) {\r\n        const tags = track.tags.map((tag) => `<button class=\"tag-button\">#${tag}</button>`).join(\"\")\r\n\r\n        return `\r\n            <li class=\"track\" data-state=\"pause\">\r\n                <div class=\"img-box\" style=\"\r\n                    background: url(${track.thumbnail});\r\n                    background-size: cover;\r\n                \">\r\n                    <i class=\"fa-solid fa-circle-play\"></i>\r\n                    <i class=\"fa-solid fa-circle-pause\"></i>\r\n                    <i class=\"fa-solid fa-spinner\"></i>\r\n                </div>\r\n                <div class=\"description\">\r\n                    <h3>${track.title}</h3>\r\n                    <p>${track.year}</p>\r\n                    <p class=\"author\">${track.author}</p>\r\n                    <p>${track.description}</p>\r\n                    <div class=\"tags\">\r\n                        ${tags}\r\n                    </div>\r\n                </div>\r\n                <div class=\"play-count\">取得中...</div>\r\n            </li>\r\n        `\r\n    }\r\n\r\n    static setPlayCount(playlist: readonly Track[], playCountRecord: PlayCountRecord) {\r\n        const list = document.querySelectorAll<HTMLElement>(\".play-count\")\r\n\r\n        playlist.forEach((obj, i) => {\r\n            list[i].innerText = \"再生回数: \" + (playCountRecord[obj.title] ?? 0)\r\n        })\r\n    }\r\n\r\n    static updatePlayingClass(index: number) {\r\n        this.#musics.querySelectorAll<HTMLElement>(\".track\").forEach((track, i) => {\r\n            track.dataset[\"state\"] = i === index ? \"playing\" : \"pause\"\r\n        })\r\n    }\r\n\r\n    static setLoading(index: number) {\r\n        const track = this.#musics.querySelectorAll<HTMLElement>(\".track\")[index]\r\n\r\n        if (track) {\r\n            track.dataset[\"state\"] = \"loading\"\r\n        }\r\n    }\r\n}\r\n","import { EventHandlers } from \"./EventHandlers.js\"\r\nimport { Sound } from \"../Model/Sound.js\"\r\nimport { Content } from \"../View/Content.js\"\r\n\r\nexport class Navigation {\r\n    static setPositionState(audio: HTMLAudioElement) {\r\n        if (!(\"mediaSession\" in navigator)) return\r\n\r\n        navigator.mediaSession.setPositionState({\r\n            duration: audio.duration,\r\n            playbackRate: audio.playbackRate,\r\n            position: audio.currentTime,\r\n        })\r\n    }\r\n\r\n    static setNavigationMenu(track: Track) {\r\n        if (!(\"mediaSession\" in navigator)) return\r\n\r\n        navigator.mediaSession.metadata = new MediaMetadata({\r\n            title: track.title ?? \"\",\r\n            artist: track.author ?? \"\",\r\n            artwork: [{ src: track.thumbnail ?? \"\" }],\r\n        })\r\n    }\r\n\r\n    static init() {\r\n        if (!(\"mediaSession\" in navigator)) return\r\n\r\n        // 再生コントロール対応\r\n        navigator.mediaSession.setActionHandler(\"play\", (e) => {\r\n            Content.addLog(e.action)\r\n            navigator.mediaSession.playbackState = \"playing\"\r\n            EventHandlers.togglePlayback()\r\n        })\r\n\r\n        navigator.mediaSession.setActionHandler(\"pause\", (e) => {\r\n            Content.addLog(e.action)\r\n            navigator.mediaSession.playbackState = \"paused\"\r\n            EventHandlers.togglePlayback()\r\n        })\r\n\r\n        navigator.mediaSession.setActionHandler(\"nexttrack\", (e) => {\r\n            Content.addLog(e.action)\r\n            EventHandlers.handleForward()\r\n        })\r\n\r\n        navigator.mediaSession.setActionHandler(\"previoustrack\", (e) => {\r\n            Content.addLog(e.action)\r\n            EventHandlers.handleBack()\r\n        })\r\n\r\n        navigator.mediaSession.setActionHandler(\"seekto\", (e) => {\r\n            Content.addLog(e.action + \": \" + e.seekTime)\r\n\r\n            Sound.currentTime = +e.seekTime!\r\n        })\r\n\r\n        navigator.mediaSession.setActionHandler(\"seekbackward\", (e) => {\r\n            Content.addLog(e.action + \": \" + e.seekOffset)\r\n\r\n            Sound.currentTime -= +e.seekOffset!\r\n        })\r\n\r\n        navigator.mediaSession.setActionHandler(\"seekforward\", (e) => {\r\n            Content.addLog(e.action + \": \" + e.seekOffset)\r\n\r\n            Sound.currentTime += +e.seekOffset!\r\n        })\r\n    }\r\n}\r\n","export class Footer {\r\n    static elements: {\r\n        playButton: HTMLElement\r\n        seekBar: HTMLInputElement\r\n        currentTimeText: HTMLElement\r\n        durationText: HTMLElement\r\n        volumeControl: HTMLInputElement\r\n        musicTitle: HTMLElement\r\n        miniThumbnail: HTMLElement\r\n        loopButton: HTMLElement\r\n        shuffleButton: HTMLElement\r\n        backButton: HTMLElement\r\n        forwardButton: HTMLElement\r\n    }\r\n\r\n    static init(loopMode: LoopMode, shuffleMode: ShuffleMode, volume: number) {\r\n        this.elements = {\r\n            playButton: document.getElementById(\"play-button\") as HTMLElement,\r\n            seekBar: document.getElementById(\"seekBar\") as HTMLInputElement,\r\n            currentTimeText: document.getElementById(\"currentTime\") as HTMLElement,\r\n            durationText: document.getElementById(\"duration\") as HTMLElement,\r\n            volumeControl: document.getElementById(\"volume\") as HTMLInputElement,\r\n            musicTitle: document.getElementById(\"music-title\") as HTMLElement,\r\n            miniThumbnail: document.getElementById(\"mini-thumbnail\") as HTMLElement,\r\n            loopButton: document.getElementById(\"loop-button\") as HTMLElement,\r\n            shuffleButton: document.getElementById(\"shuffle-button\") as HTMLElement,\r\n            backButton: document.getElementById(\"back-button\") as HTMLElement,\r\n            forwardButton: document.getElementById(\"forward-button\") as HTMLElement,\r\n        }\r\n\r\n        this.#initializeVolume(volume)\r\n        this.updateLoopButtonUI(loopMode)\r\n        this.updateShuffleButtonUI(shuffleMode)\r\n    }\r\n\r\n    static #initializeVolume(volume: number) {\r\n        this.elements.volumeControl.value = \"\" + volume\r\n    }\r\n\r\n    static updateLoopButtonUI(loopMode: LoopMode) {\r\n        const loopStates = [\"loop-none\", \"\", \"loop-one\"]\r\n        const loopTitles = [\"ループしない\", \"ループする\", \"一曲ループ\"]\r\n\r\n        this.elements.loopButton.dataset[\"loop\"] = loopStates[loopMode]\r\n\r\n        this.elements.loopButton.title = loopTitles[loopMode]\r\n    }\r\n\r\n    static updateShuffleButtonUI(shuffleMode: ShuffleMode) {\r\n        this.elements.shuffleButton.classList.toggle(\"shuffle-off\", shuffleMode === 0)\r\n    }\r\n\r\n    static updatePlayButtonUI(isPlaying: boolean) {\r\n        this.elements.playButton.classList.toggle(\"button-playing\", isPlaying)\r\n    }\r\n\r\n    static updateTrackInfo(track: Track) {\r\n        this.elements.musicTitle.innerHTML = `${track.title}<br />${track.author}`\r\n        this.elements.miniThumbnail.style.backgroundImage = `url(${track.thumbnail})`\r\n        this.elements.miniThumbnail.style.backgroundSize = \"cover\"\r\n    }\r\n\r\n    static updateSeekBarMaxAndDurationText(max: number) {\r\n        this.elements.durationText.innerText = this.#formatTime(max)\r\n        this.elements.seekBar.max = String(max)\r\n    }\r\n\r\n    static updateSeekBarAndCurrentTimeText(time: number) {\r\n        this.elements.currentTimeText.innerText = this.#formatTime(time)\r\n        this.elements.seekBar.value = String(time)\r\n    }\r\n\r\n    static #formatTime(seconds: number) {\r\n        const mins = Math.floor(seconds / 60)\r\n        const secs = Math.floor(seconds % 60)\r\n        return `${String(mins).padStart(2, \"0\")}:${String(secs).padStart(2, \"0\")}`\r\n    }\r\n}\r\n","export class LocalStorage {\r\n    static set volume(volume: number) {\r\n        localStorage.setItem(\"volume\", \"\" + volume)\r\n    }\r\n\r\n    static get volume() {\r\n        return localStorage[\"volume\"] ? Number(localStorage[\"volume\"]) : 50\r\n    }\r\n\r\n    static set loopMode(loopMode: LoopMode) {\r\n        localStorage.setItem(\"loopMode\", \"\" + loopMode)\r\n    }\r\n\r\n    static get loopMode(): LoopMode {\r\n        return (localStorage[\"loopMode\"] ? Number(localStorage[\"loopMode\"]) : 0) as LoopMode\r\n    }\r\n\r\n    static set shuffleMode(loopMode: ShuffleMode) {\r\n        localStorage.setItem(\"shuffleMode\", \"\" + loopMode)\r\n    }\r\n\r\n    static get shuffleMode(): ShuffleMode {\r\n        return (localStorage[\"shuffleMode\"] ? Number(localStorage[\"shuffleMode\"]) : 0) as ShuffleMode\r\n    }\r\n}\r\n","// グローバル状態の管理\r\nexport class Record {\r\n    static data: Readonly<Track[]> = []\r\n    static playCountRecord: PlayCountRecord | null = null\r\n}\r\n","export class Header {\r\n    static title: HTMLElement\r\n    static searchBox: HTMLInputElement\r\n    static searchForm: HTMLFormElement\r\n\r\n    static init() {\r\n        this.title = document.getElementById(\"title\")!\r\n        this.searchBox = document.getElementById(\"search-box\") as HTMLInputElement\r\n        this.searchForm = document.getElementById(\"search\") as HTMLFormElement\r\n    }\r\n\r\n    static setSearchBox(text: string) {\r\n        this.searchBox.value = text\r\n    }\r\n}\r\n","import { PlaylistManager } from \"../Model/PlaylistManager.js\"\r\n\r\nimport { URLManager } from \"./URLManager.js\"\r\nimport { EventHandlers } from \"./EventHandlers.js\"\r\n\r\nexport class ContentEvents {\r\n    static #initialized = false\r\n\r\n    static init() {\r\n        if (this.#initialized) throw new Error(\"すでにinitialized!\")\r\n\r\n        this.#initialized = true\r\n    }\r\n\r\n    static setupTrackClickEvents(playlist: readonly Track[]) {\r\n        document.querySelectorAll(\".track\").forEach((track, i) => {\r\n            // アイコン\r\n            track.querySelector<HTMLDivElement>(\".img-box\")!.onclick = () => {\r\n                if (PlaylistManager.currentTrackIndex === i) {\r\n                    // 現在のトラックがクリックされた場合は再生/一時停止を切り替える\r\n                    EventHandlers.togglePlayback()\r\n                } else {\r\n                    // 別のトラックがクリックされた場合はそのトラックを再生する\r\n                    EventHandlers.changeTrack(playlist[i], i)\r\n                }\r\n            }\r\n\r\n            // 作者\r\n            track.querySelector<HTMLParagraphElement>(\".author\")!.onclick = () => {\r\n                URLManager.search(playlist[i].author)\r\n            }\r\n\r\n            // タグ\r\n            track.querySelectorAll<HTMLButtonElement>(\".tag-button\").forEach((button, j) => {\r\n                button.onclick = () => {\r\n                    URLManager.search(playlist[i].tags[j])\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n","import { Record } from \"../Model/Record.js\"\r\nimport { LocalStorage } from \"../Model/LocalStorage.js\"\r\nimport { PlaylistManager } from \"../Model/PlaylistManager.js\"\r\nimport { Content } from \"../View/Content.js\"\r\nimport { Header } from \"../View/Header.js\"\r\nimport { Sound } from \"../Model/Sound.js\"\r\nimport { ContentEvents } from \"./ContentEvents.js\"\r\n\r\nexport class URLManager {\r\n    static isDebugMode(): boolean {\r\n        const url = new URL(window.location.href)\r\n        return url.searchParams.get(\"debug\") === \"true\"\r\n    }\r\n\r\n    static search(text: string) {\r\n        if (text === \"\") {\r\n            this.#clearSearchQuery()\r\n        } else {\r\n            this.#setSearchQuery(text)\r\n        }\r\n\r\n        this.handleQueryChange()\r\n    }\r\n\r\n    static handleQueryChange() {\r\n        console.log(\"クエリパラメータが変更されました\")\r\n\r\n        Content.fadeIn()\r\n\r\n        const title = PlaylistManager.getCurrentTrackTitle()\r\n\r\n        Header.setSearchBox(\"\")\r\n\r\n        const search = this.#getSearchQuery()\r\n\r\n        let data = Record.data\r\n        if (search) {\r\n            data = Record.data.filter(\r\n                (track) => track.tags.includes(search) || track.title.includes(search) || track.author === search,\r\n            )\r\n            Header.setSearchBox(search)\r\n        }\r\n\r\n        PlaylistManager.setPlaylist(data, LocalStorage.shuffleMode === 1)\r\n        PlaylistManager.currentTrackIndex = PlaylistManager.playlist.findIndex((track) => track.title === title)\r\n        Content.renderPlaylist(PlaylistManager.playlist)\r\n\r\n        if (Record.playCountRecord) {\r\n            Content.setPlayCount(PlaylistManager.playlist, Record.playCountRecord)\r\n        }\r\n\r\n        ContentEvents.setupTrackClickEvents(PlaylistManager.playlist)\r\n\r\n        if (Sound.isPlaying()) {\r\n            Content.updatePlayingClass(PlaylistManager.currentTrackIndex)\r\n        }\r\n    }\r\n\r\n    static #getSearchQuery(): string | null {\r\n        const url = new URL(window.location.href)\r\n        return url.searchParams.get(\"search\") || null\r\n    }\r\n\r\n    static #setSearchQuery(query: string) {\r\n        const url = new URL(window.location.href)\r\n        url.searchParams.set(\"search\", query)\r\n        window.history.pushState({}, \"\", url)\r\n    }\r\n\r\n    static #clearSearchQuery() {\r\n        const url = new URL(window.location.href)\r\n        url.searchParams.delete(\"search\")\r\n        window.history.pushState({}, \"\", url)\r\n    }\r\n}\r\n\r\n// 履歴変更検知用のイベントリスナー\r\nwindow.addEventListener(\"popstate\", (event) => {\r\n    event.preventDefault() // ページ遷移をキャンセル\r\n\r\n    URLManager.handleQueryChange() // 関数実行\r\n\r\n    console.log(\"popped\")\r\n})\r\n","import { URLManager } from \"../Controller/URLManager.js\"\r\n\r\nlet playCounted = false\r\n\r\nexport class Survey {\r\n    static safeSendPlayCount(title: string) {\r\n        if (!playCounted && !URLManager.isDebugMode()) {\r\n            this.#sendPlayCount(title)\r\n\r\n            playCounted = true\r\n\r\n            setTimeout(() => {\r\n                playCounted = false\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    static async fetchPlayCountData() {\r\n        const response = await fetch(\r\n            \"https://script.google.com/macros/s/AKfycbw-M6WdDND050H_DboJKixnDERBEYu1X24O6JthlZkohDJMKfrELuQ5YHDpbZ8N3eOh/exec\",\r\n        ) // WebアプリURLを指定\r\n\r\n        const data = await response.json() // JSONデータとして解析\r\n\r\n        return data\r\n    }\r\n\r\n    static async #sendPlayCount(title: string) {\r\n        try {\r\n            const response = await fetch(\r\n                \"https://script.google.com/macros/s/AKfycbya_x47m1TS70IhvejTmlMscmsGtheak2MvwYuXvVMse-Ar6UDv1EqmG_aQTSmDxRWc/exec\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        title: title,\r\n                    }),\r\n                    mode: \"no-cors\",\r\n                },\r\n            )\r\n\r\n            // console.log(response)\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`)\r\n            }\r\n\r\n            const result = await response.json()\r\n            console.log(result.status === \"success\" ? \"送信完了！\" : \"エラーが発生しました。\")\r\n        } catch (error) {\r\n            console.error(\"Error:\", error)\r\n            console.log(\"送信中にエラーが発生しました。\")\r\n        }\r\n    }\r\n}\r\n","import { LocalStorage } from \"../Model/LocalStorage.js\"\r\nimport { Navigation } from \"./Navigation.js\"\r\nimport { PlaylistManager } from \"../Model/PlaylistManager.js\"\r\nimport { Sound } from \"../Model/Sound.js\"\r\n\r\nimport { Content } from \"../View/Content.js\"\r\nimport { Footer } from \"../View/Footer.js\"\r\n\r\nimport { EventHandlers } from \"./EventHandlers.js\"\r\nimport { Survey } from \"../Model/Survey.js\"\r\nimport { ContentEvents } from \"./ContentEvents.js\"\r\nimport { Record } from \"../Model/Record.js\"\r\n\r\nexport class FooterEvents {\r\n    static #initialized = false\r\n\r\n    static init() {\r\n        if (this.#initialized) throw new Error(\"すでにinitialized!\")\r\n\r\n        this.#setupPlaybackControls()\r\n        this.#setupSeekBarControls()\r\n        this.#setupVolumeControls()\r\n        this.#setupLoopControls()\r\n        this.#setupShuffleControls()\r\n        this.#setupMiniThumbnail()\r\n\r\n        this.#initialized = true\r\n    }\r\n\r\n    static setupSeekBarUpdate(audio: HTMLAudioElement) {\r\n        // 再生中にシークバーを更新\r\n        audio.ontimeupdate = () => {\r\n            Footer.updateSeekBarAndCurrentTimeText(audio.currentTime)\r\n\r\n            Navigation.setPositionState(audio)\r\n\r\n            // ループ再生を検知\r\n            if (LocalStorage.loopMode == 2 && audio.duration - audio.currentTime < 0.65) {\r\n                const title = PlaylistManager.getCurrentTrackTitle()\r\n                title && Survey.safeSendPlayCount(title)\r\n            }\r\n        }\r\n    }\r\n\r\n    static #setupMiniThumbnail() {\r\n        Footer.elements.musicTitle.addEventListener(\"click\", () => {\r\n            Content.scrollTo(PlaylistManager.currentTrackIndex)\r\n        })\r\n    }\r\n\r\n    static #setupPlaybackControls() {\r\n        Footer.elements.playButton.onclick = () => EventHandlers.togglePlayback()\r\n        Footer.elements.backButton.onclick = () => EventHandlers.handleBack()\r\n        Footer.elements.forwardButton.onclick = () => EventHandlers.handleForward()\r\n    }\r\n\r\n    static #setupSeekBarControls() {\r\n        Footer.elements.seekBar.oninput = () => {\r\n            Sound.currentTime = +Footer.elements.seekBar.value\r\n        }\r\n    }\r\n\r\n    static #setupVolumeControls() {\r\n        Footer.elements.volumeControl.oninput = (e) => {\r\n            LocalStorage.volume = +(e.target as HTMLInputElement).value\r\n            Sound.setVolume(LocalStorage.volume / 100)\r\n        }\r\n    }\r\n\r\n    static #setupLoopControls() {\r\n        Footer.elements.loopButton.onclick = () => {\r\n            LocalStorage.loopMode = ((LocalStorage.loopMode + 1) % 3) as LoopMode\r\n\r\n            LocalStorage.loopMode = LocalStorage.loopMode\r\n\r\n            Footer.updateLoopButtonUI(LocalStorage.loopMode)\r\n\r\n            Sound.setLoop(LocalStorage.loopMode === 2)\r\n        }\r\n    }\r\n\r\n    static #setupShuffleControls() {\r\n        Footer.elements.shuffleButton.onclick = () => {\r\n            LocalStorage.shuffleMode = (1 - LocalStorage.shuffleMode) as ShuffleMode\r\n\r\n            LocalStorage.shuffleMode = LocalStorage.shuffleMode\r\n\r\n            Footer.updateShuffleButtonUI(LocalStorage.shuffleMode)\r\n\r\n            if (LocalStorage.shuffleMode === 1) {\r\n                PlaylistManager.shufflePlaylist({\r\n                    moveCurrentTrackToTop: true,\r\n                })\r\n            } else {\r\n                PlaylistManager.setDefaultOrder()\r\n            }\r\n\r\n            Content.renderPlaylist(PlaylistManager.playlist)\r\n            Content.updatePlayingClass(PlaylistManager.currentTrackIndex)\r\n            Content.scrollTo(PlaylistManager.currentTrackIndex)\r\n\r\n            if (Record.playCountRecord) {\r\n                Content.setPlayCount(PlaylistManager.playlist, Record.playCountRecord)\r\n            }\r\n\r\n            ContentEvents.setupTrackClickEvents(PlaylistManager.playlist)\r\n        }\r\n    }\r\n}\r\n","import { Sound } from \"../Model/Sound.js\"\r\nimport { PlaylistManager } from \"../Model/PlaylistManager.js\"\r\nimport { Navigation } from \"./Navigation.js\"\r\n\r\nimport { Footer } from \"../View/Footer.js\"\r\nimport { Content } from \"../View/Content.js\"\r\nimport { LocalStorage } from \"../Model/LocalStorage.js\"\r\nimport { FooterEvents } from \"./FooterEvents.js\"\r\nimport { Survey } from \"../Model/Survey.js\"\r\n\r\n// イベントハンドラの設定\r\nexport class EventHandlers {\r\n    static #initialized = false\r\n\r\n    static init() {\r\n        if (this.#initialized) throw new Error(\"すでにinitialized!\")\r\n\r\n        this.#setupKeyboardControls()\r\n        this.#setupVisibilityHandler()\r\n\r\n        this.#initialized = true\r\n    }\r\n\r\n    static togglePlayback() {\r\n        if (!Sound.isReady()) return\r\n\r\n        if (Sound.isPlaying()) {\r\n            Sound.pause()\r\n            Footer.updatePlayButtonUI(false)\r\n            Content.updatePlayingClass(-1)\r\n        } else {\r\n            Sound.play()\r\n            Footer.updatePlayButtonUI(true)\r\n            Content.updatePlayingClass(PlaylistManager.currentTrackIndex)\r\n        }\r\n    }\r\n\r\n    static async handleBack() {\r\n        if (Sound.currentTime > 0.5) {\r\n            Sound.currentTime = 0\r\n            return\r\n        }\r\n\r\n        const { track, index } = PlaylistManager.getPreviousTrack()\r\n        await this.changeTrack(track, index)\r\n        Content.scrollTo(PlaylistManager.currentTrackIndex)\r\n    }\r\n\r\n    static async handleForward({ scroll = true } = {}) {\r\n        const { track, index } = PlaylistManager.getNextTrack()\r\n        await this.changeTrack(track, index)\r\n        scroll && Content.scrollTo(PlaylistManager.currentTrackIndex)\r\n    }\r\n\r\n    static async changeTrack(track: Track, index: number) {\r\n        Content.updatePlayingClass(index)\r\n        Content.setLoading(index)\r\n\r\n        await Sound.load(track.path)\r\n        Sound.setVolume(LocalStorage.volume / 100)\r\n        Sound.setLoop(LocalStorage.loopMode === 2)\r\n        Sound.play()\r\n\r\n        FooterEvents.setupSeekBarUpdate(Sound.audio!)\r\n        this.#setupTrackEnded(Sound.audio!)\r\n\r\n        Footer.updateTrackInfo(track)\r\n        Footer.updatePlayButtonUI(true)\r\n        Footer.updateSeekBarMaxAndDurationText(Sound.getDuration())\r\n        Content.updatePlayingClass(index)\r\n\r\n        Navigation.setNavigationMenu(track)\r\n\r\n        PlaylistManager.currentTrackIndex = index\r\n\r\n        Survey.safeSendPlayCount(track.title)\r\n    }\r\n\r\n    static #setupTrackEnded(audio: HTMLAudioElement) {\r\n        audio.onended = () => {\r\n            if (LocalStorage.loopMode === 1) {\r\n                this.handleForward({ scroll: false })\r\n                //\r\n            } else if (LocalStorage.loopMode === 0) {\r\n                const isLast = PlaylistManager.playlist.length - 1 === PlaylistManager.currentTrackIndex\r\n\r\n                if (isLast) {\r\n                    // 止める\r\n                    Footer.updatePlayButtonUI(false)\r\n                    Content.updatePlayingClass(-1)\r\n                    return\r\n                }\r\n\r\n                this.handleForward({ scroll: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    static #setupKeyboardControls() {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            if (e.code === \"Space\") {\r\n                e.preventDefault()\r\n                this.togglePlayback()\r\n            }\r\n        })\r\n    }\r\n\r\n    static #setupVisibilityHandler() {\r\n        // document.addEventListener(\"visibilitychange\", async (e) => {\r\n        //     addLog(\"visibility changed: \" + document.visibilityState)\r\n        //     addLog(\"OS: \" + getMobileOS())\r\n        //     if (getMobileOS() != \"iOS\") return\r\n        //     if (document.visibilityState === \"visible\") {\r\n        //         if (PlayerState.wasPlaying) {\r\n        //             PlayerState.audio.play()\r\n        //         }\r\n        //         const interval = setInterval(() => {\r\n        //             addLog(PlayerState.audio.playbackRate)\r\n        //         }, 1000 / 24)\r\n        //         setTimeout(() => {\r\n        //             clearInterval(interval)\r\n        //         }, 10000)\r\n        //     } else {\r\n        //         // ページから離れる時の処理\r\n        //         PlayerState.wasPlaying = !PlayerState.audio.paused\r\n        //         PlayerState.audio.pause()\r\n        //     }\r\n        // })\r\n    }\r\n}\r\n","import { Header } from \"../View/Header.js\"\r\nimport { URLManager } from \"./URLManager.js\"\r\n\r\nexport class HeaderEvents {\r\n    static #initialized = false\r\n\r\n    static init() {\r\n        if (this.#initialized) throw new Error(\"すでにinitialized!\")\r\n\r\n        this.#setupForm()\r\n        this.#setupTitle()\r\n\r\n        this.#initialized = true\r\n    }\r\n\r\n    static #setupForm() {\r\n        Header.searchForm.onsubmit = (e) => {\r\n            e.preventDefault()\r\n\r\n            URLManager.search(Header.searchBox.value)\r\n        }\r\n    }\r\n\r\n    static #setupTitle() {\r\n        Header.title.onclick = (e) => {\r\n            e.preventDefault()\r\n\r\n            URLManager.search(\"\")\r\n        }\r\n    }\r\n}\r\n","import { EventHandlers } from \"./Controller/EventHandlers.js\"\r\nimport { ContentEvents } from \"./Controller/ContentEvents.js\"\r\nimport { HeaderEvents } from \"./Controller/HeaderEvents.js\"\r\nimport { FooterEvents } from \"./Controller/FooterEvents.js\"\r\n\r\nimport { Record } from \"./Model/Record.js\"\r\nimport { Survey } from \"./Model/Survey.js\"\r\nimport { PlaylistManager } from \"./Model/PlaylistManager.js\"\r\nimport { Navigation } from \"./Controller/Navigation.js\"\r\nimport { LocalStorage } from \"./Model/LocalStorage.js\"\r\nimport { URLManager } from \"./Controller/URLManager.js\"\r\n\r\nimport { Content } from \"./View/Content.js\"\r\nimport { Footer } from \"./View/Footer.js\"\r\nimport { Header } from \"./View/Header.js\"\r\n\r\n// アプリケーションの初期化\r\nasync function initializeApp() {\r\n    Footer.init(LocalStorage.loopMode, LocalStorage.shuffleMode, LocalStorage.volume)\r\n    Header.init()\r\n    Content.init()\r\n    EventHandlers.init()\r\n    HeaderEvents.init()\r\n    FooterEvents.init()\r\n    ContentEvents.init()\r\n    Navigation.init()\r\n\r\n    const response = await fetch(\"music-data.json\")\r\n    Record.data = Object.freeze(await response.json())\r\n    PlaylistManager.setPlaylist(Record.data, LocalStorage.shuffleMode === 1)\r\n\r\n    // 初期ロード時のクエリ処理\r\n    URLManager.handleQueryChange()\r\n\r\n    if (URLManager.isDebugMode()) {\r\n        console.log(\"開けゴマ!\")\r\n        Content.debugLog.style.display = \"block\"\r\n    }\r\n\r\n    Record.playCountRecord = Object.freeze(await Survey.fetchPlayCountData())\r\n\r\n    Content.setPlayCount(PlaylistManager.playlist, Record.playCountRecord!)\r\n}\r\n\r\nfunction tryInitialize() {\r\n    try {\r\n        initializeApp()\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n}\r\n\r\nif (document.readyState === \"complete\") {\r\n    tryInitialize()\r\n} else {\r\n    document.addEventListener(\"DOMContentLoaded\", tryInitialize)\r\n}\r\n"],"names":["Sound","#isReady","#source","#context","#gain","src","resolve","e","loop","volume","second","PlaylistManager","playlist","shuffle","#shuffleArray","currentTrack","moveCurrentTrackToTop","nextIndex","prevIndex","array","_","cur","idx","arr","rand","Content","#musics","text","index","#createTrackElement","track","tags","tag","playCountRecord","list","obj","i","Navigation","audio","EventHandlers","Footer","loopMode","shuffleMode","#initializeVolume","loopStates","loopTitles","isPlaying","max","#formatTime","time","seconds","mins","secs","LocalStorage","Record","Header","ContentEvents","#initialized","URLManager","button","j","#clearSearchQuery","#setSearchQuery","title","search","#getSearchQuery","data","query","url","event","playCounted","Survey","#sendPlayCount","response","result","error","FooterEvents","#setupPlaybackControls","#setupSeekBarControls","#setupVolumeControls","#setupLoopControls","#setupShuffleControls","#setupMiniThumbnail","#setupKeyboardControls","#setupVisibilityHandler","scroll","#setupTrackEnded","HeaderEvents","#setupForm","#setupTitle","initializeApp","tryInitialize"],"mappings":"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"}