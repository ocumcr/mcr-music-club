class r{static#t=!1;static audio=null;static#e;static#a;static#s;static load(t,e){return this.#a||(this.#a=new AudioContext,this.#s=this.#a.createGain(),this.#s.connect(this.#a.destination)),this.audio&&(this.audio.pause(),this.#e.disconnect()),this.audio=new Audio(t),this.audio.loop=e,this.#e=this.#a.createMediaElementSource(this.audio),this.#e.connect(this.#s),new Promise(a=>{this.audio.onloadedmetadata=c=>{this.#t=!0,a()}})}static play(){this.isReady()&&this.audio.play()}static pause(){this.isReady()&&this.audio.pause()}static isPlaying(){return this.isReady()&&!this.audio.paused}static setLoop(t){this.isReady()&&(this.audio.loop=t)}static isReady(){return this.#t}static setVolume(t){if(t<0||1<t){console.error("volume must range from 0 to 1.");return}this.#s.gain.value=t}static getDuration(){return this.isReady()?this.audio.duration:0}static set currentTime(t){this.isReady()&&(this.audio.currentTime=t)}static get currentTime(){return this.isReady()?this.audio.currentTime:0}}class i{static playlist=[];static defaultOrderPlaylist=[];static currentTrackIndex=-1;static isAvailable(){return this.currentTrackIndex!==-1}static setPlaylist(t,e){this.defaultOrderPlaylist=t,this.playlist=e?this.#t([...t]):t}static setDefaultOrder(){if(this.isAvailable()){const t=this.playlist[this.currentTrackIndex];this.currentTrackIndex=this.defaultOrderPlaylist.indexOf(t)}this.playlist=[...this.defaultOrderPlaylist]}static shufflePlaylist({moveCurrentTrackToTop:t}){if(this.isAvailable()){const e=this.playlist[this.currentTrackIndex];do this.playlist=this.#t([...this.playlist]);while(t&&this.playlist[0]!=e);t&&(this.currentTrackIndex=0)}else this.playlist=this.#t([...this.playlist])}static getCurrentTrackTitle(){return this.isAvailable()?this.playlist[this.currentTrackIndex].title:null}static getNextTrack(){if(!this.isAvailable())return{track:this.playlist[0],index:0};const t=(this.currentTrackIndex+1)%this.playlist.length;return{track:this.playlist[t],index:t}}static getPreviousTrack(){if(!this.isAvailable())return{track:this.playlist[0],index:0};const t=(this.currentTrackIndex-1+this.playlist.length)%this.playlist.length;return{track:this.playlist[t],index:t}}static#t(t){return t.length==1?[...t]:[...t].reduce((e,a,c,d)=>{const T=Math.floor(Math.random()*(c+1));return[d[c],d[T]]=[d[T],a],d})}}class h{static data=[];static playCountRecord}class s{static set volume(t){localStorage.setItem("volume",""+t)}static get volume(){return localStorage.volume?Number(localStorage.volume):50}static set loopMode(t){localStorage.setItem("loopMode",""+t)}static get loopMode(){return localStorage.loopMode?Number(localStorage.loopMode):0}static set shuffleMode(t){localStorage.setItem("shuffleMode",""+t)}static get shuffleMode(){return localStorage.shuffleMode?Number(localStorage.shuffleMode):0}}class p{static title;static search;static init(){this.title=document.getElementById("title"),this.search=document.getElementById("search")}static setSearchBox(t){this.search.value=t}}class m{static isDebugMode(){return new URL(window.location.href).searchParams.get("debug")==="true"}static search(t){t===""?this.#a():this.#e(t),this.handleQueryChange()}static handleQueryChange(){console.log("クエリパラメータが変更されました"),n.fadeIn();const t=i.getCurrentTrackTitle();p.setSearchBox("");const e=this.#t();let a=h.data;e&&(a=h.data.filter(c=>c.tags.includes(e)||c.title.includes(e)||c.author===e),p.setSearchBox(e)),i.setPlaylist(a,s.shuffleMode===1),i.currentTrackIndex=i.playlist.findIndex(c=>c.title===t),n.renderPlaylist(i.playlist),r.isPlaying()&&n.updatePlayingClass(i.currentTrackIndex)}static#t(){return new URL(window.location.href).searchParams.get("search")||null}static#e(t){const e=new URL(window.location.href);e.searchParams.set("search",t),window.history.pushState({},"",e)}static#a(){const t=new URL(window.location.href);t.searchParams.delete("search"),window.history.pushState({},"",t)}}window.addEventListener("popstate",l=>{l.preventDefault(),m.handleQueryChange(),console.log("popped")});class v{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#t=!0}static setupTrackClickEvents(t){document.querySelectorAll(".track").forEach((e,a)=>{e.querySelector(".img-box").onclick=()=>{i.currentTrackIndex===a?u.togglePlayback():u.changeTrack(t[a],a)},e.querySelector(".author").onclick=()=>{m.search(t[a].author)},e.querySelectorAll(".tag-button").forEach((c,d)=>{c.onclick=()=>{m.search(t[a].tags[d])}})})}}class n{static debugLog;static content;static#t;static init(){this.debugLog=document.getElementById("debug-log"),this.content=document.querySelector(".content"),this.#t=document.querySelector(".musics")}static addLog(t){console.log(t),this.debugLog.innerHTML+=t+"<br />"}static fadeIn(){this.content.classList.remove("fade-in"),requestAnimationFrame(()=>{this.content.classList.add("fade-in")})}static scrollTo(t){t<=0?window.scrollTo({top:0,behavior:"smooth"}):document.querySelectorAll(".track")[t-1].scrollIntoView({behavior:"smooth"})}static renderPlaylist(t){this.#t.innerHTML=t.map(this.#e).join(""),v.setupTrackClickEvents(t),h.playCountRecord&&this.setPlayCount(t,h.playCountRecord)}static#e(t){const e=t.tags.map(a=>`<button class="tag-button">#${a}</button>`).join("");return`
            <li class="track">
                <div class="img-box" style="
                    background: url(${t.thumbnail});
                    background-size: cover;
                ">
                    <i class="fa-solid fa-circle-play"></i>
                    <i class="fa-solid fa-circle-pause"></i>
                </div>
                <div class="description">
                    <h3>${t.title}</h3>
                    <p>${t.year}</p>
                    <p class="author">${t.author}</p>
                    <p>${t.description}</p>
                    <div class="tags">
                        ${e}
                    </div>
                </div>
                <div class="play-count">取得中...</div>
            </li>
        `}static setPlayCount(t,e){const a=document.querySelectorAll(".play-count");t.forEach((c,d)=>{a[d].innerText="再生回数: "+(e[c.title]??0)})}static updatePlayingClass(t){this.#t.querySelectorAll(".track").forEach((e,a)=>e.classList.toggle("playing",a===t))}}class g{static setPositionState(t){"mediaSession"in navigator&&navigator.mediaSession.setPositionState({duration:t.duration,playbackRate:t.playbackRate,position:t.currentTime})}static setNavigationMenu(t){"mediaSession"in navigator&&(navigator.mediaSession.metadata=new MediaMetadata({title:t.title??"",artist:t.author??"",artwork:[{src:t.thumbnail??""}]}))}static init(){"mediaSession"in navigator&&(navigator.mediaSession.setActionHandler("play",t=>{n.addLog(t.action),navigator.mediaSession.playbackState="playing",u.togglePlayback()}),navigator.mediaSession.setActionHandler("pause",t=>{n.addLog(t.action),navigator.mediaSession.playbackState="paused",u.togglePlayback()}),navigator.mediaSession.setActionHandler("nexttrack",t=>{n.addLog(t.action),u.handleForward()}),navigator.mediaSession.setActionHandler("previoustrack",t=>{n.addLog(t.action),u.handleBack()}),navigator.mediaSession.setActionHandler("seekto",t=>{n.addLog(t.action+": "+t.seekTime),r.currentTime=+t.seekTime}),navigator.mediaSession.setActionHandler("seekbackward",t=>{n.addLog(t.action+": "+t.seekOffset),r.currentTime-=+t.seekOffset}),navigator.mediaSession.setActionHandler("seekforward",t=>{n.addLog(t.action+": "+t.seekOffset),r.currentTime+=+t.seekOffset}))}}class o{static elements;static init(t,e,a){this.elements={playButton:document.getElementById("play-button"),seekBar:document.getElementById("seekBar"),currentTimeText:document.getElementById("currentTime"),durationText:document.getElementById("duration"),volumeControl:document.getElementById("volume"),musicTitle:document.getElementById("music-title"),miniThumbnail:document.getElementById("mini-thumbnail"),loopButton:document.getElementById("loop-button"),shuffleButton:document.getElementById("shuffle-button"),backButton:document.getElementById("back-button"),forwardButton:document.getElementById("forward-button")},this.#t(a),this.updateLoopButtonUI(t),this.updateShuffleButtonUI(e)}static#t(t){this.elements.volumeControl.value=""+t}static updateLoopButtonUI(t){const e=["loop-none","","loop-one"],a=["ループしない","ループする","一曲ループ"];this.elements.loopButton.dataset.loop=e[t],this.elements.loopButton.title=a[t]}static updateShuffleButtonUI(t){this.elements.shuffleButton.classList.toggle("shuffle-off",t===0)}static updatePlayButtonUI(t){this.elements.playButton.classList.toggle("button-playing",t)}static updateTrackInfo(t){this.elements.musicTitle.innerHTML=`${t.title}<br />${t.author}`,this.elements.miniThumbnail.style.backgroundImage=`url(${t.thumbnail})`,this.elements.miniThumbnail.style.backgroundSize="cover"}static updateDurationText(t){this.elements.durationText.innerText=this.#e(t)}static updateSeekBarMax(t){this.elements.seekBar.max=String(t)}static updateSeekBarAndCurrentTimeText(t){this.elements.currentTimeText.innerText=this.#e(t),this.elements.seekBar.value=String(t)}static#e(t){const e=Math.floor(t/60),a=Math.floor(t%60);return`${String(e).padStart(2,"0")}:${String(a).padStart(2,"0")}`}}let f=!1;class y{static safeSendPlayCount(t){!f&&!m.isDebugMode()&&(this.#t(t),f=!0,setTimeout(()=>{f=!1},1e3))}static async fetchPlayCountData(){return await(await fetch("https://script.google.com/macros/s/AKfycbw-M6WdDND050H_DboJKixnDERBEYu1X24O6JthlZkohDJMKfrELuQ5YHDpbZ8N3eOh/exec")).json()}static async#t(t){try{const e=await fetch("https://script.google.com/macros/s/AKfycbya_x47m1TS70IhvejTmlMscmsGtheak2MvwYuXvVMse-Ar6UDv1EqmG_aQTSmDxRWc/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t}),mode:"no-cors"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const a=await e.json();console.log(a.status==="success"?"送信完了！":"エラーが発生しました。")}catch(e){console.error("Error:",e),console.log("送信中にエラーが発生しました。")}}}class S{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#a(),this.#s(),this.#i(),this.#n(),this.#o(),this.#e(),this.#t=!0}static setupSeekBarUpdate(t){t.ontimeupdate=()=>{if(o.updateSeekBarAndCurrentTimeText(t.currentTime),g.setPositionState(t),s.loopMode==2&&t.duration-t.currentTime<.65){const e=i.getCurrentTrackTitle();e&&y.safeSendPlayCount(e)}}}static#e(){o.elements.musicTitle.addEventListener("click",()=>{n.scrollTo(i.currentTrackIndex)})}static#a(){o.elements.playButton.onclick=()=>u.togglePlayback(),o.elements.backButton.onclick=()=>u.handleBack(),o.elements.forwardButton.onclick=()=>u.handleForward()}static#s(){o.elements.seekBar.oninput=()=>{r.currentTime=+o.elements.seekBar.value}}static#i(){o.elements.volumeControl.oninput=t=>{s.volume=+t.target.value,r.setVolume(s.volume/100)}}static#n(){o.elements.loopButton.onclick=()=>{s.loopMode=(s.loopMode+1)%3,s.loopMode=s.loopMode,o.updateLoopButtonUI(s.loopMode),r.setLoop(s.loopMode===2)}}static#o(){o.elements.shuffleButton.onclick=()=>{s.shuffleMode=1-s.shuffleMode,s.shuffleMode=s.shuffleMode,o.updateShuffleButtonUI(s.shuffleMode),s.shuffleMode===1?i.shufflePlaylist({moveCurrentTrackToTop:!0}):i.setDefaultOrder(),n.renderPlaylist(i.playlist),n.updatePlayingClass(i.currentTrackIndex),n.scrollTo(i.currentTrackIndex)}}}class u{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#a(),this.#s(),this.#t=!0}static togglePlayback(){r.isReady()&&(r.isPlaying()?(r.pause(),o.updatePlayButtonUI(!1),n.updatePlayingClass(-1)):(r.play(),o.updatePlayButtonUI(!0),n.updatePlayingClass(i.currentTrackIndex)))}static async handleBack(){if(r.currentTime>.5){r.currentTime=0;return}const{track:t,index:e}=i.getPreviousTrack();await this.changeTrack(t,e),n.scrollTo(i.currentTrackIndex)}static async handleForward({scroll:t=!0}={}){const{track:e,index:a}=i.getNextTrack();await this.changeTrack(e,a),t&&n.scrollTo(i.currentTrackIndex)}static async changeTrack(t,e){await r.load(t.path,s.loopMode===2),r.setVolume(s.volume/100),r.play(),S.setupSeekBarUpdate(r.audio),this.#e(r.audio);const a=r.getDuration();o.updateTrackInfo(t),o.updatePlayButtonUI(!0),o.updateSeekBarMax(a),o.updateDurationText(a),n.updatePlayingClass(e),g.setNavigationMenu(t),i.currentTrackIndex=e,y.safeSendPlayCount(t.title)}static#e(t){t.onended=()=>{if(s.loopMode===1)this.handleForward({scroll:!1});else if(s.loopMode===0){if(i.playlist.length-1===i.currentTrackIndex){o.updatePlayButtonUI(!1),n.updatePlayingClass(-1);return}this.handleForward({scroll:!1})}}}static#a(){window.addEventListener("keydown",t=>{t.code==="Space"&&(t.preventDefault(),this.togglePlayback())})}static#s(){}}class b{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#e(),this.#a(),this.#t=!0}static#e(){const t=document.querySelector(".search");t.onsubmit=e=>{e.preventDefault(),m.search(p.search.value)}}static#a(){p.title.onclick=t=>{t.preventDefault(),m.search("")}}}async function w(){o.init(s.loopMode,s.shuffleMode,s.volume),p.init(),n.init(),u.init(),b.init(),S.init(),v.init(),g.init();const l=await fetch("music-data.json");h.data=Object.freeze(await l.json()),i.setPlaylist(h.data,s.shuffleMode===1),m.handleQueryChange(),m.isDebugMode()&&(console.log("開けゴマ!"),n.debugLog.style.display="block"),h.playCountRecord=Object.freeze(await y.fetchPlayCountData()),n.setPlayCount(i.playlist,h.playCountRecord)}function k(){try{w()}catch(l){alert(l)}}document.readyState==="complete"?k():document.addEventListener("DOMContentLoaded",k);
//# sourceMappingURL=run.js.map
