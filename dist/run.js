class o{static#t=!1;static audio=null;static#e;static#a;static#s;static load(t){return this.#a||(this.#a=new AudioContext,this.#s=this.#a.createGain(),this.#s.connect(this.#a.destination)),this.audio&&(this.audio.pause(),this.#e.disconnect()),this.audio=new Audio(t),this.#e=this.#a.createMediaElementSource(this.audio),this.#e.connect(this.#s),new Promise(e=>{this.audio.onloadedmetadata=s=>{this.#t=!0,e()}})}static play(){this.isReady()&&this.audio.play()}static pause(){this.isReady()&&this.audio.pause()}static isPlaying(){return this.isReady()&&!this.audio.paused}static setLoop(t){this.isReady()&&(this.audio.loop=t)}static isReady(){return this.#t}static setVolume(t){if(t<0||1<t){console.error("volume must range from 0 to 1.");return}this.#s.gain.value=t}static getDuration(){return this.isReady()?this.audio.duration:0}static set currentTime(t){this.isReady()&&(this.audio.currentTime=t)}static get currentTime(){return this.isReady()?this.audio.currentTime:0}}class a{static playlist=[];static defaultOrderPlaylist=[];static currentTrackIndex=-1;static isAvailable(){return this.currentTrackIndex!==-1}static setPlaylist(t,e){this.defaultOrderPlaylist=t,this.playlist=e?this.#t([...t]):t}static setDefaultOrder(){if(this.isAvailable()){const t=this.playlist[this.currentTrackIndex];this.currentTrackIndex=this.defaultOrderPlaylist.indexOf(t)}this.playlist=[...this.defaultOrderPlaylist]}static shufflePlaylist({moveCurrentTrackToTop:t}){if(this.isAvailable()){const e=this.playlist[this.currentTrackIndex];do this.playlist=this.#t([...this.playlist]);while(t&&this.playlist[0]!=e);t&&(this.currentTrackIndex=0)}else this.playlist=this.#t([...this.playlist])}static getCurrentTrackTitle(){return this.isAvailable()?this.playlist[this.currentTrackIndex].title:null}static getNextTrack(){if(!this.isAvailable())return{track:this.playlist[0],index:0};const t=(this.currentTrackIndex+1)%this.playlist.length;return{track:this.playlist[t],index:t}}static getPreviousTrack(){if(!this.isAvailable())return{track:this.playlist[0],index:0};const t=(this.currentTrackIndex-1+this.playlist.length)%this.playlist.length;return{track:this.playlist[t],index:t}}static#t(t){return t.length==1?[...t]:[...t].reduce((e,s,c,h)=>{const T=Math.floor(Math.random()*(c+1));return[h[c],h[T]]=[h[T],s],h})}}class i{static debugLog;static content;static#t;static init(){this.debugLog=document.getElementById("debug-log"),this.content=document.querySelector(".content"),this.#t=document.querySelector(".musics")}static addLog(t){console.log(t),this.debugLog.innerHTML+=t+"<br />"}static fadeIn(){this.content.classList.remove("fade-in"),requestAnimationFrame(()=>{this.content.classList.add("fade-in")})}static scrollTo(t){t<=0?window.scrollTo({top:0,behavior:"smooth"}):document.querySelectorAll(".track")[t-1].scrollIntoView({behavior:"smooth"})}static renderPlaylist(t){this.#t.innerHTML=t.map(this.#e).join("")}static#e(t){const e=t.tags.map(s=>`<button class="tag-button">#${s}</button>`).join("");return`
            <li class="track" data-state="pause">
                <div class="img-box" style="
                    background: url(${t.thumbnail});
                    background-size: cover;
                ">
                    <i class="fa-solid fa-circle-play"></i>
                    <i class="fa-solid fa-circle-pause"></i>
                    <i class="fa-solid fa-spinner"></i>
                </div>
                <div class="description">
                    <h3>${t.title}</h3>
                    <p>${t.year}</p>
                    <p class="author">${t.author}</p>
                    <p>${t.description}</p>
                    <div class="tags">
                        ${e}
                    </div>
                </div>
                <div class="play-count">取得中...</div>
            </li>
        `}static setPlayCount(t,e){const s=document.querySelectorAll(".play-count");t.forEach((c,h)=>{s[h].innerText="再生回数: "+(e[c.title]??0)})}static updatePlayingClass(t){this.#t.querySelectorAll(".track").forEach((e,s)=>{e.dataset.state=s===t?"loading":"pause"})}static setClassPlaying(t){this.#t.querySelectorAll(".track")[t].dataset.state="playing"}}class y{static setPositionState(t){"mediaSession"in navigator&&navigator.mediaSession.setPositionState({duration:t.duration,playbackRate:t.playbackRate,position:t.currentTime})}static setNavigationMenu(t){"mediaSession"in navigator&&(navigator.mediaSession.metadata=new MediaMetadata({title:t.title??"",artist:t.author??"",artwork:[{src:t.thumbnail??""}]}))}static init(){"mediaSession"in navigator&&(navigator.mediaSession.setActionHandler("play",t=>{i.addLog(t.action),navigator.mediaSession.playbackState="playing",d.togglePlayback()}),navigator.mediaSession.setActionHandler("pause",t=>{i.addLog(t.action),navigator.mediaSession.playbackState="paused",d.togglePlayback()}),navigator.mediaSession.setActionHandler("nexttrack",t=>{i.addLog(t.action),d.handleForward()}),navigator.mediaSession.setActionHandler("previoustrack",t=>{i.addLog(t.action),d.handleBack()}),navigator.mediaSession.setActionHandler("seekto",t=>{i.addLog(t.action+": "+t.seekTime),o.currentTime=+t.seekTime}),navigator.mediaSession.setActionHandler("seekbackward",t=>{i.addLog(t.action+": "+t.seekOffset),o.currentTime-=+t.seekOffset}),navigator.mediaSession.setActionHandler("seekforward",t=>{i.addLog(t.action+": "+t.seekOffset),o.currentTime+=+t.seekOffset}))}}class r{static elements;static init(t,e,s){this.elements={playButton:document.getElementById("play-button"),seekBar:document.getElementById("seekBar"),currentTimeText:document.getElementById("currentTime"),durationText:document.getElementById("duration"),volumeControl:document.getElementById("volume"),musicTitle:document.getElementById("music-title"),miniThumbnail:document.getElementById("mini-thumbnail"),loopButton:document.getElementById("loop-button"),shuffleButton:document.getElementById("shuffle-button"),backButton:document.getElementById("back-button"),forwardButton:document.getElementById("forward-button")},this.#t(s),this.updateLoopButtonUI(t),this.updateShuffleButtonUI(e)}static#t(t){this.elements.volumeControl.value=""+t}static updateLoopButtonUI(t){const e=["loop-none","","loop-one"],s=["ループしない","ループする","一曲ループ"];this.elements.loopButton.dataset.loop=e[t],this.elements.loopButton.title=s[t]}static updateShuffleButtonUI(t){this.elements.shuffleButton.classList.toggle("shuffle-off",t===0)}static updatePlayButtonUI(t){this.elements.playButton.classList.toggle("button-playing",t)}static updateTrackInfo(t){this.elements.musicTitle.innerHTML=`${t.title}<br />${t.author}`,this.elements.miniThumbnail.style.backgroundImage=`url(${t.thumbnail})`,this.elements.miniThumbnail.style.backgroundSize="cover"}static updateSeekBarMaxAndDurationText(t){this.elements.durationText.innerText=this.#e(t),this.elements.seekBar.max=String(t)}static updateSeekBarAndCurrentTimeText(t){this.elements.currentTimeText.innerText=this.#e(t),this.elements.seekBar.value=String(t)}static#e(t){const e=Math.floor(t/60),s=Math.floor(t%60);return`${String(e).padStart(2,"0")}:${String(s).padStart(2,"0")}`}}class n{static set volume(t){localStorage.setItem("volume",""+t)}static get volume(){return localStorage.volume?Number(localStorage.volume):50}static set loopMode(t){localStorage.setItem("loopMode",""+t)}static get loopMode(){return localStorage.loopMode?Number(localStorage.loopMode):0}static set shuffleMode(t){localStorage.setItem("shuffleMode",""+t)}static get shuffleMode(){return localStorage.shuffleMode?Number(localStorage.shuffleMode):0}}class u{static data=[];static playCountRecord=null}class m{static title;static search;static init(){this.title=document.getElementById("title"),this.search=document.getElementById("search")}static setSearchBox(t){this.search.value=t}}class g{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#t=!0}static setupTrackClickEvents(t){document.querySelectorAll(".track").forEach((e,s)=>{e.querySelector(".img-box").onclick=()=>{a.currentTrackIndex===s?d.togglePlayback():d.changeTrack(t[s],s)},e.querySelector(".author").onclick=()=>{p.search(t[s].author)},e.querySelectorAll(".tag-button").forEach((c,h)=>{c.onclick=()=>{p.search(t[s].tags[h])}})})}}class p{static isDebugMode(){return new URL(window.location.href).searchParams.get("debug")==="true"}static search(t){t===""?this.#a():this.#e(t),this.handleQueryChange()}static handleQueryChange(){console.log("クエリパラメータが変更されました"),i.fadeIn();const t=a.getCurrentTrackTitle();m.setSearchBox("");const e=this.#t();let s=u.data;e&&(s=u.data.filter(c=>c.tags.includes(e)||c.title.includes(e)||c.author===e),m.setSearchBox(e)),a.setPlaylist(s,n.shuffleMode===1),a.currentTrackIndex=a.playlist.findIndex(c=>c.title===t),i.renderPlaylist(a.playlist),u.playCountRecord&&i.setPlayCount(a.playlist,u.playCountRecord),g.setupTrackClickEvents(a.playlist),o.isPlaying()&&i.updatePlayingClass(a.currentTrackIndex)}static#t(){return new URL(window.location.href).searchParams.get("search")||null}static#e(t){const e=new URL(window.location.href);e.searchParams.set("search",t),window.history.pushState({},"",e)}static#a(){const t=new URL(window.location.href);t.searchParams.delete("search"),window.history.pushState({},"",t)}}window.addEventListener("popstate",l=>{l.preventDefault(),p.handleQueryChange(),console.log("popped")});let f=!1;class k{static safeSendPlayCount(t){!f&&!p.isDebugMode()&&(this.#t(t),f=!0,setTimeout(()=>{f=!1},1e3))}static async fetchPlayCountData(){return await(await fetch("https://script.google.com/macros/s/AKfycbw-M6WdDND050H_DboJKixnDERBEYu1X24O6JthlZkohDJMKfrELuQ5YHDpbZ8N3eOh/exec")).json()}static async#t(t){try{const e=await fetch("https://script.google.com/macros/s/AKfycbya_x47m1TS70IhvejTmlMscmsGtheak2MvwYuXvVMse-Ar6UDv1EqmG_aQTSmDxRWc/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t}),mode:"no-cors"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const s=await e.json();console.log(s.status==="success"?"送信完了！":"エラーが発生しました。")}catch(e){console.error("Error:",e),console.log("送信中にエラーが発生しました。")}}}class S{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#a(),this.#s(),this.#i(),this.#n(),this.#o(),this.#e(),this.#t=!0}static setupSeekBarUpdate(t){t.ontimeupdate=()=>{if(r.updateSeekBarAndCurrentTimeText(t.currentTime),y.setPositionState(t),n.loopMode==2&&t.duration-t.currentTime<.65){const e=a.getCurrentTrackTitle();e&&k.safeSendPlayCount(e)}}}static#e(){r.elements.musicTitle.addEventListener("click",()=>{i.scrollTo(a.currentTrackIndex)})}static#a(){r.elements.playButton.onclick=()=>d.togglePlayback(),r.elements.backButton.onclick=()=>d.handleBack(),r.elements.forwardButton.onclick=()=>d.handleForward()}static#s(){r.elements.seekBar.oninput=()=>{o.currentTime=+r.elements.seekBar.value}}static#i(){r.elements.volumeControl.oninput=t=>{n.volume=+t.target.value,o.setVolume(n.volume/100)}}static#n(){r.elements.loopButton.onclick=()=>{n.loopMode=(n.loopMode+1)%3,n.loopMode=n.loopMode,r.updateLoopButtonUI(n.loopMode),o.setLoop(n.loopMode===2)}}static#o(){r.elements.shuffleButton.onclick=()=>{n.shuffleMode=1-n.shuffleMode,n.shuffleMode=n.shuffleMode,r.updateShuffleButtonUI(n.shuffleMode),n.shuffleMode===1?a.shufflePlaylist({moveCurrentTrackToTop:!0}):a.setDefaultOrder(),i.renderPlaylist(a.playlist),i.updatePlayingClass(a.currentTrackIndex),i.scrollTo(a.currentTrackIndex),u.playCountRecord&&i.setPlayCount(a.playlist,u.playCountRecord),g.setupTrackClickEvents(a.playlist)}}}class d{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#a(),this.#s(),this.#t=!0}static togglePlayback(){o.isReady()&&(o.isPlaying()?(o.pause(),r.updatePlayButtonUI(!1),i.updatePlayingClass(-1)):(o.play(),r.updatePlayButtonUI(!0),i.updatePlayingClass(a.currentTrackIndex)))}static async handleBack(){if(o.currentTime>.5){o.currentTime=0;return}const{track:t,index:e}=a.getPreviousTrack();await this.changeTrack(t,e),i.scrollTo(a.currentTrackIndex)}static async handleForward({scroll:t=!0}={}){const{track:e,index:s}=a.getNextTrack();await this.changeTrack(e,s),t&&i.scrollTo(a.currentTrackIndex)}static async changeTrack(t,e){i.updatePlayingClass(e),await o.load(t.path),o.setVolume(n.volume/100),o.setLoop(n.loopMode===2),o.play(),S.setupSeekBarUpdate(o.audio),this.#e(o.audio),r.updateTrackInfo(t),r.updatePlayButtonUI(!0),r.updateSeekBarMaxAndDurationText(o.getDuration()),i.setClassPlaying(e),y.setNavigationMenu(t),a.currentTrackIndex=e,k.safeSendPlayCount(t.title)}static#e(t){t.onended=()=>{if(n.loopMode===1)this.handleForward({scroll:!1});else if(n.loopMode===0){if(a.playlist.length-1===a.currentTrackIndex){r.updatePlayButtonUI(!1),i.updatePlayingClass(-1);return}this.handleForward({scroll:!1})}}}static#a(){window.addEventListener("keydown",t=>{t.code==="Space"&&(t.preventDefault(),this.togglePlayback())})}static#s(){}}class b{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#e(),this.#a(),this.#t=!0}static#e(){const t=document.querySelector(".search");t.onsubmit=e=>{e.preventDefault(),p.search(m.search.value)}}static#a(){m.title.onclick=t=>{t.preventDefault(),p.search("")}}}async function w(){r.init(n.loopMode,n.shuffleMode,n.volume),m.init(),i.init(),d.init(),b.init(),S.init(),g.init(),y.init();const l=await fetch("music-data.json");u.data=Object.freeze(await l.json()),a.setPlaylist(u.data,n.shuffleMode===1),p.handleQueryChange(),p.isDebugMode()&&(console.log("開けゴマ!"),i.debugLog.style.display="block"),u.playCountRecord=Object.freeze(await k.fetchPlayCountData()),i.setPlayCount(a.playlist,u.playCountRecord)}function v(){try{w()}catch(l){alert(l)}}document.readyState==="complete"?v():document.addEventListener("DOMContentLoaded",v);
//# sourceMappingURL=run.js.map
