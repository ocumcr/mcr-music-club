class l{static#t=!1;static audio=null;static#e;static#a;static#s;static load(t){return this.#a||(this.#a=new AudioContext,this.#s=this.#a.createGain(),this.#s.connect(this.#a.destination)),this.audio&&(this.audio.pause(),this.#e.disconnect()),this.audio=new Audio(t),this.#e=this.#a.createMediaElementSource(this.audio),this.#e.connect(this.#s),new Promise(e=>{this.audio.onloadedmetadata=a=>{this.#t=!0,e()}})}static play(){this.isReady()&&this.audio.play()}static pause(){this.isReady()&&this.audio.pause()}static isPlaying(){return this.isReady()&&!this.audio.paused}static setLoop(t){this.isReady()&&(this.audio.loop=t)}static isReady(){return this.#t}static setVolume(t){if(t<0||1<t){console.error("volume must range from 0 to 1.");return}this.#s.gain.value=t}static getDuration(){return this.isReady()?this.audio.duration:0}static set currentTime(t){this.isReady()&&(this.audio.currentTime=t)}static get currentTime(){return this.isReady()?this.audio.currentTime:0}}class r{static elements;static init(t,e,a){this.elements={playButton:document.getElementById("play-button"),seekBar:document.getElementById("seekBar"),currentTimeText:document.getElementById("currentTime"),durationText:document.getElementById("duration"),volumeControl:document.getElementById("volume"),musicTitle:document.getElementById("music-title"),miniThumbnail:document.getElementById("mini-thumbnail"),loopButton:document.getElementById("loop-button"),shuffleButton:document.getElementById("shuffle-button"),backButton:document.getElementById("back-button"),forwardButton:document.getElementById("forward-button")},this.#t(a),this.updateLoopButtonUI(t),this.updateShuffleButtonUI(e)}static#t(t){this.elements.volumeControl.value=""+t}static updateLoopButtonUI(t){const e=["loop-none","","loop-one"],a=["ループしない","ループする","一曲ループ"];this.elements.loopButton.dataset.loop=e[t],this.elements.loopButton.title=a[t]}static updateShuffleButtonUI(t){this.elements.shuffleButton.classList.toggle("shuffle-off",t===0)}static updatePlayButtonUI(t){this.elements.playButton.classList.toggle("button-playing",t)}static updateTrackInfo(t){this.elements.musicTitle.innerHTML=`${t.title}<br />${t.author}`,this.elements.miniThumbnail.style.backgroundImage=`url(${t.thumbnail})`,this.elements.miniThumbnail.style.backgroundSize="cover"}static updateSeekBarMaxAndDurationText(t){this.elements.durationText.innerText=this.#e(t),this.elements.seekBar.max=String(t)}static updateSeekBarAndCurrentTimeText(t){this.elements.currentTimeText.innerText=this.#e(t),this.elements.seekBar.value=String(t)}static#e(t){const e=Math.floor(t/60),a=Math.floor(t%60);return`${String(e).padStart(2,"0")}:${String(a).padStart(2,"0")}`}}class s{static debugLog;static content;static#t;static init(){this.debugLog=document.getElementById("debug-log"),this.content=document.querySelector(".content"),this.#t=document.getElementById("musics")}static displayDebugLog(){this.debugLog.style.display="block"}static addLog(t){console.log(t),this.debugLog.innerHTML+=t+"<br />"}static fadeIn(){this.content.classList.remove("fade-in"),requestAnimationFrame(()=>{this.content.classList.add("fade-in")})}static scrollTo(t){t<=0?window.scrollTo({top:0,behavior:"smooth"}):document.querySelectorAll(".track")[t-1].scrollIntoView({behavior:"smooth"})}static renderPlaylist(t,e){this.#t.innerHTML=t.map(this.#e).join(""),e&&this.setPlayCount(t,e)}static#e(t){const e=t.tags.map(a=>`<button class="tag-button">#${a}</button>`).join("");return`
            <li class="track" data-state="pause">
                <div class="img-box" style="
                    background: url(${t.thumbnail});
                    background-size: cover;
                ">
                    <i class="fa-solid fa-circle-play"></i>
                    <i class="fa-solid fa-circle-pause"></i>
                    <i class="fa-solid fa-spinner"></i>
                </div>
                <div class="description">
                    <h3>${t.title}</h3>
                    <p>${t.year}</p>
                    <p class="author">${t.author}</p>
                    <p>${t.description}</p>
                    <div class="tags">
                        ${e}
                    </div>
                </div>
                <div class="play-count">取得中...</div>
            </li>
        `}static setPlayCount(t,e){const a=document.querySelectorAll(".play-count");t.forEach((p,u)=>{const g=e[p.title]??0;a[u].innerText="再生回数: "+g})}static updatePlayingClass(t){this.#t.querySelectorAll(".track").forEach((e,a)=>{e.dataset.state=a===t?"playing":"pause"})}static setLoading(t){const e=this.#t.querySelectorAll(".track")[t];e&&(e.dataset.state="loading")}}class k{static setPositionState(t){"mediaSession"in navigator&&navigator.mediaSession.setPositionState({duration:t.duration,playbackRate:t.playbackRate,position:t.currentTime})}static setNavigationMenu(t){"mediaSession"in navigator&&(navigator.mediaSession.metadata=new MediaMetadata({title:t.title??"",artist:t.author??"",artwork:[{src:t.thumbnail??""}]}))}}class n{static set volume(t){localStorage.setItem("volume",""+t)}static get volume(){return localStorage.volume?Number(localStorage.volume):50}static set loopMode(t){localStorage.setItem("loopMode",""+t)}static get loopMode(){return localStorage.loopMode?Number(localStorage.loopMode):0}static set shuffleMode(t){localStorage.setItem("shuffleMode",""+t)}static get shuffleMode(){return localStorage.shuffleMode?Number(localStorage.shuffleMode):0}}class d{static data=[];static playCountRecord=null}class i{static playlist=[];static defaultOrderPlaylist=[];static currentTrackTitle="";static getCurrentTrackIndex(){return this.playlist.findIndex(t=>t.title===this.currentTrackTitle)}static isAvailable(){return this.currentTrackTitle!==""}static setPlaylist(t,e){this.defaultOrderPlaylist=t,this.playlist=e?this.#t([...t]):t}static setDefaultOrder(){this.playlist=[...this.defaultOrderPlaylist]}static shufflePlaylist({moveCurrentTrackToTop:t}){if(this.isAvailable()){const e=this.playlist[this.getCurrentTrackIndex()];do this.playlist=this.#t([...this.playlist]);while(t&&this.playlist[0]!=e)}else this.playlist=this.#t([...this.playlist])}static getNextTrack(){if(!this.isAvailable())return{track:this.playlist[0]};const t=(this.getCurrentTrackIndex()+1)%this.playlist.length;return{track:this.playlist[t]}}static getPreviousTrack(){if(!this.isAvailable())return{track:this.playlist[0]};const t=(this.getCurrentTrackIndex()-1+this.playlist.length)%this.playlist.length;return{track:this.playlist[t]}}static#t(t){return t.length==1?[...t]:[...t].reduce((e,a,p,u)=>{const g=Math.floor(Math.random()*(p+1));return[u[p],u[g]]=[u[g],a],u})}}class m{static title;static searchBox;static searchForm;static init(){this.title=document.getElementById("title"),this.searchBox=document.getElementById("search-box"),this.searchForm=document.getElementById("search")}static setSearchBox(t){this.searchBox.value=t}}class T{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#t=!0}static setupTrackClickEvents(){const t=i.playlist;document.querySelectorAll(".track").forEach((e,a)=>{e.querySelector(".img-box").onclick=()=>{i.getCurrentTrackIndex()===a?c.togglePlayback():c.changeTrack(t[a])},e.querySelector(".author").onclick=()=>{h.search(t[a].author)},e.querySelectorAll(".tag-button").forEach((p,u)=>{p.onclick=()=>{h.search(t[a].tags[u])}})})}}class h{static isDebugMode(){return new URL(window.location.href).searchParams.get("debug")==="true"}static search(t){t===""?this.#i():this.#s(t),this.handleQueryChange()}static handleQueryChange(){console.log("クエリパラメータが変更されました"),this.#t(),this.#e()}static#t(){const t=this.#a();let e=d.data;t!==""&&(e=d.data.filter(a=>a.tags.includes(t)||a.title.includes(t)||a.author===t)),m.setSearchBox(t),i.setPlaylist(e,n.shuffleMode===1)}static#e(){s.fadeIn(),s.renderPlaylist(i.playlist,d.playCountRecord),s.updatePlayingClass(i.getCurrentTrackIndex()),T.setupTrackClickEvents()}static#a(){return new URL(window.location.href).searchParams.get("search")??""}static#s(t){const e=new URL(window.location.href);e.searchParams.set("search",t),window.history.pushState({},"",e)}static#i(){const t=new URL(window.location.href);t.searchParams.delete("search"),window.history.pushState({},"",t)}}window.addEventListener("popstate",o=>{o.preventDefault(),h.handleQueryChange(),console.log("popped")});let f=!1;class y{static safeSendPlayCount(t){!f&&!h.isDebugMode()&&(this.#t(t),f=!0,setTimeout(()=>{f=!1},1e3))}static async fetchPlayCountData(){return await(await fetch("https://script.google.com/macros/s/AKfycbw-M6WdDND050H_DboJKixnDERBEYu1X24O6JthlZkohDJMKfrELuQ5YHDpbZ8N3eOh/exec")).json()}static async#t(t){try{const e=await fetch("https://script.google.com/macros/s/AKfycbya_x47m1TS70IhvejTmlMscmsGtheak2MvwYuXvVMse-Ar6UDv1EqmG_aQTSmDxRWc/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t}),mode:"no-cors"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const a=await e.json();console.log(a.status==="success"?"送信完了！":"エラーが発生しました。")}catch(e){console.error("Error:",e),console.log("送信中にエラーが発生しました。")}}}class c{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#s(),this.#i(),this.#t=!0}static togglePlayback(){l.isReady()&&(l.isPlaying()?(l.pause(),r.updatePlayButtonUI(!1),s.updatePlayingClass(-1)):(l.play(),r.updatePlayButtonUI(!0),s.updatePlayingClass(i.getCurrentTrackIndex())))}static async handleBack(){if(l.currentTime>.5){l.currentTime=0;return}const{track:t}=i.getPreviousTrack();await this.changeTrack(t),s.scrollTo(i.getCurrentTrackIndex())}static async handleForward({scroll:t=!0}={}){const{track:e}=i.getNextTrack();await this.changeTrack(e),t&&s.scrollTo(i.getCurrentTrackIndex())}static async changeTrack(t){i.currentTrackTitle=t.title;const e=i.getCurrentTrackIndex();s.updatePlayingClass(e),s.setLoading(e),await l.load(t.path),l.setVolume(n.volume/100),l.setLoop(n.loopMode===2),l.play(),r.updateTrackInfo(t),r.updatePlayButtonUI(!0),r.updateSeekBarMaxAndDurationText(l.getDuration()),s.updatePlayingClass(e),k.setNavigationMenu(t),this.#e(l.audio),this.#a(l.audio),y.safeSendPlayCount(t.title)}static#e(t){t.ontimeupdate=()=>{if(r.updateSeekBarAndCurrentTimeText(t.currentTime),k.setPositionState(t),n.loopMode==2&&t.duration-t.currentTime<.65){const e=i.currentTrackTitle;e&&y.safeSendPlayCount(e)}}}static#a(t){t.onended=()=>{if(n.loopMode===1)this.handleForward({scroll:!1});else if(n.loopMode===0){if(i.playlist.length-1===i.getCurrentTrackIndex()){r.updatePlayButtonUI(!1),s.updatePlayingClass(-1);return}this.handleForward({scroll:!1})}}}static#s(){window.addEventListener("keydown",t=>{t.code==="Space"&&(t.preventDefault(),this.togglePlayback())})}static#i(){}}class b{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#e(),this.#a(),this.#t=!0}static#e(){m.searchForm.onsubmit=t=>{t.preventDefault(),h.search(m.searchBox.value)}}static#a(){m.title.onclick=t=>{t.preventDefault(),h.search("")}}}class S{static#t=!1;static init(){if(this.#t)throw new Error("すでにinitialized!");this.#a(),this.#s(),this.#i(),this.#o(),this.#n(),this.#e(),this.#t=!0}static#e(){r.elements.musicTitle.addEventListener("click",()=>{s.scrollTo(i.getCurrentTrackIndex())})}static#a(){r.elements.playButton.onclick=()=>c.togglePlayback(),r.elements.backButton.onclick=()=>c.handleBack(),r.elements.forwardButton.onclick=()=>c.handleForward()}static#s(){r.elements.seekBar.oninput=()=>{l.currentTime=+r.elements.seekBar.value}}static#i(){r.elements.volumeControl.oninput=t=>{n.volume=+t.target.value,l.setVolume(n.volume/100)}}static#o(){r.elements.loopButton.onclick=()=>{n.loopMode=(n.loopMode+1)%3,r.updateLoopButtonUI(n.loopMode),l.setLoop(n.loopMode===2)}}static#n(){r.elements.shuffleButton.onclick=()=>{n.shuffleMode=1-n.shuffleMode,n.shuffleMode===1?i.shufflePlaylist({moveCurrentTrackToTop:!0}):i.setDefaultOrder(),r.updateShuffleButtonUI(n.shuffleMode),s.renderPlaylist(i.playlist,d.playCountRecord),s.updatePlayingClass(i.getCurrentTrackIndex()),s.scrollTo(i.getCurrentTrackIndex()),T.setupTrackClickEvents()}}}class B{static init(){"mediaSession"in navigator&&(this.#t("play",t=>{s.addLog(t.action),navigator.mediaSession.playbackState="playing",c.togglePlayback()}),this.#t("pause",t=>{s.addLog(t.action),navigator.mediaSession.playbackState="paused",c.togglePlayback()}),this.#t("nexttrack",t=>{s.addLog(t.action),c.handleForward()}),this.#t("previoustrack",t=>{s.addLog(t.action),c.handleBack()}),this.#t("seekto",t=>{s.addLog(t.action+": "+t.seekTime),l.currentTime=+t.seekTime}),this.#t("seekbackward",t=>{s.addLog(t.action+": "+t.seekOffset),l.currentTime-=+t.seekOffset}),this.#t("seekforward",t=>{s.addLog(t.action+": "+t.seekOffset),l.currentTime+=+t.seekOffset}))}static#t(t,e){navigator.mediaSession.setActionHandler(t,e)}}async function w(){r.init(n.loopMode,n.shuffleMode,n.volume),m.init(),s.init(),c.init(),b.init(),S.init(),T.init(),B.init();const o=await fetch("music-data.json");d.data=Object.freeze(await o.json()),i.setPlaylist(d.data,n.shuffleMode===1),h.handleQueryChange(),h.isDebugMode()&&(console.log("開けゴマ!"),s.displayDebugLog()),d.playCountRecord=Object.freeze(await y.fetchPlayCountData()),s.setPlayCount(i.playlist,d.playCountRecord)}function v(){try{w()}catch(o){alert(o)}}document.readyState==="complete"?v():document.addEventListener("DOMContentLoaded",v);
//# sourceMappingURL=run.js.map
