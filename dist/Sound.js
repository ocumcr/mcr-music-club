"use strict";export class Sound{static#s=!1;static audio=null;static#e;static#t;static#i;static load(t,i){return this.#t||(this.#t=new AudioContext,this.#i=this.#t.createGain(),this.#i.connect(this.#t.destination)),this.audio&&(this.audio.pause(),this.#e.disconnect()),this.audio=new Audio(t),this.audio.loop=i,this.#e=this.#t.createMediaElementSource(this.audio),this.#e.connect(this.#i),new Promise(e=>{this.audio.onloadedmetadata=a=>{this.#s=!0,e()}})}static play(){this.isReady()&&this.audio.play()}static pause(){this.isReady()&&this.audio.pause()}static isPlaying(){return this.isReady()&&!this.audio.paused}static setLoop(t){this.isReady()&&(this.audio.loop=t)}static isReady(){return this.#s}static setVolume(t){if(t<0||1<t){console.error("volume must range from 0 to 1.");return}this.#i.gain.value=t}static getDuration(){return this.isReady()?this.audio.duration:0}static set currentTime(t){this.isReady()&&(this.audio.currentTime=t)}static get currentTime(){return this.isReady()?this.audio.currentTime:0}}
